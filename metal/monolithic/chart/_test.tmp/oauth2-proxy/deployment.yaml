apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2proxy
  namespace: metal
  labels:
    app: oauth2prox
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oauth2proxy
  template:
    metadata:
      labels:
        app: oauth2proxy
    spec:
      containers:
        - name: redis
          image: redis:latest
          ports:
            - containerPort: 6379
              name: redis

        - name: oauth2proxy
          image: bitnami/oauth2-proxy
          args:
            - "--config"
            - "/oauth2-proxy.cfg"  # Make sure to use a list format for command
          volumeMounts:
            - name: configmap-oauth2-proxy
              mountPath: /oauth2-proxy.cfg
              subPath: oauth2-proxy.cfg
          ports:
            - containerPort: 4180
              name: oauth2-proxy
      volumes:
        - name: configmap-oauth2-proxy
          configMap:
            name: configmap-oauth2-proxy
---
apiVersion: v1
kind: Service
metadata:
  name: oauth2proxy
  namespace: metal
  labels:
    app: oauth2proxy
spec:
  selector:
    app: oauth2proxy
  ports:
    - protocol: TCP
      port: 4180 
      targetPort: 4180
      name: oauth2-proxy
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth2proxy
  namespace: metal
  annotations:
    "traefik.ingress.kubernetes.io/router.entrypoints": websecure
spec:
  rules:
    - host: "oauth.anykey.pl"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: oauth2proxy
                port:
                  number: 4180 
