{{/*
############################################################
# Copyright (c) 2024 Utilizable 
# Released under the MIT license
# ----------------------------------------------------------
#
# Deployment definition - Coturn
#
############################################################
*/}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{- include "coturn.fullname" . }}"
  labels:
    {{- include "coturn.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.global.annotations | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "coturn.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "coturn.labels" . | nindent 8 }}
    spec:
{{/*
  # --------------------------------------------
  # SETTINGS 
  # --------------------------------------------
*/}}
      {{- if .Values.coturn.runtimeClassName }}
      runtimeClassName: {{ toYaml .Values.coturn.runtimeClassName }}
      {{- end }}
      {{- with .Values.coturn.nodeSelector }}
      nodeSelector:
      {{ toYaml . | indent 2 }}
      {{- end }}
      {{- if .Values.coturn.hostNetwork }}
      hostNetwork: {{ toYaml .Values.coturn.hostNetwork }}
      {{- end }}
{{/*
  # --------------------------------------------
  # MAIN-CONTAINER 
  # --------------------------------------------
*/}}
      containers:
        - name: {{ .Chart.Name }} 
          {{- if .Values.coturn.command }}
          command:
            {{- range .Values.coturn.command }}
              - {{ . | quote }}
            {{- end }}
          {{- end }}
          {{- if .Values.coturn.args }}
          args:
            {{- range .Values.coturn.args }}
              - {{ . | quote }}
            {{- end }}
          {{- end }}
          image: {{ 
                   include "metal.imageByParams" 
                   (dict "base" .Values.coturn) 
                 }}
          imagePullPolicy: {{ .Values.coturn.image.pullPolicy }}
          {{- if .Values.coturn.resources }}
          resources:
            {{- toYaml .Values.coturn.resources | nindent 12 }}
          env:
          {{- end }}
          {{- with .Values.coturn.env }}
            {{- tpl (toYaml .) $ | nindent 12 }}
          {{- end }}
{{/*
  # --------------------------------------------
  # PORTS 
  # --------------------------------------------
*/}}
          {{- if .Values.coturn.ports }}
          ports:
            {{- .Values.coturn.ports | toYaml | nindent 12 }}
          {{- end }}
{{/*
  # --------------------------------------------
  # PROBES 
  # --------------------------------------------
*/}}
          {{- if .Values.coturn.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.coturn.startupProbe.probePath }}
              scheme: {{ .Values.coturn.startupProbe.scheme }}
              port: 8080 
            initialDelaySeconds: {{ .Values.coturn.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.coturn.startupProbe.periodSeconds }}
            successThreshold: {{ .Values.coturn.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.coturn.startupProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.coturn.startupProbe.timeoutSeconds }}
          {{- end }}
{{/*
  # --------------------------------------------
  # VOLUME MOUNTS 
  # --------------------------------------------
*/}}
          {{- if .Values.coturn.extraVolumesMounts }}
          volumeMounts:
            {{- range .Values.coturn.extraVolumesMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }} 
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
            {{- end }}
          {{- end }}
{{/*
  # --------------------------------------------
  # SIDECARS 
  # --------------------------------------------
*/}}
      {{- if .Values.coturn.sidecars }}
        {{- .Values.coturn.sidecars | toYaml | nindent 8 }}
      {{- end }}
{{/*
  # --------------------------------------------
  # VOLUMES 
  # --------------------------------------------
*/}}
      {{- if .Values.coturn.extraVolumes }}
      volumes:
        {{- range .Values.coturn.extraVolumes }}
{{/* 
  volumes - configMap
*/}}
        {{- if eq .type "configMap" }}
        - name: {{ .name }}
          configMap:
            name: {{ .name }}
        {{- end }}
{{/* 
  volumes - persistentVolumeClaim 
*/}}
        {{- if eq .type "persistentVolumeClaim" }}
        - name: {{ .name }}
          persistentVolumeClaim:
            claimName: {{ .name }}
        {{- end }}
{{/* 
  volumes - emptyDIr 
*/}}
        {{- if eq .type "emptyDir" }}
        - name: {{ .name }}
          emptyDir: {}
        {{- end }}

        {{- end }}
      {{- end }}
...
