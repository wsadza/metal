############################################################
# Copyright (c) 2024 wsadza
# Released under the MIT license
# ----------------------------------------------------------
#
# Example of attaching NVIDIA gpu into docker inside wsl-container.
# ---
# export STREAMER_HOST=$(hostname -I | awk '{print $1}')
#
############################################################

version: '3.8'
services:

# ----------------------------
# Stream Server

    stream:
      hostname: stream
      image: "ghcr.io/wsadza/metal/full-ubuntu:latest"

      ports:
# Expose app - stream
        - "8080:8080"
        - "9091:9091"
# Expose app - coturn
        - "3478:3478/udp"
        - "3478:3478/tcp"
      environment:
# Use internal turn server in case of lack of remote setting
        STREAMER_HOST: "${STREAMER_HOST}"

# WSL: ~
#   https://github.com/microsoft/wslg/wiki/GPU-selection-in-WSLg
        MESA_D3D12_DEFAULT_ADAPTER_NAME: "NVIDIA"
        LIBVA_DRIVER_NAME: "d3d12"
        VK_ICD_FILENAMES: "/usr/share/vulkan/icd.d/dzn_icd.x86_64.json"
        LD_LIBRARY_PATH: "/usr/lib/wsl/lib"

# Apply gpu resource
      deploy:
          resources:
            reservations:
              devices:
                - driver: nvidia
                  count: all
                  capabilities: [gpu]

# To Make Steam working we need to break isolation
      tmpfs:
        - /dev/shm:rw
      shm_size: 64
      ipc: host # Could also be set to 'shareable'
      ulimits:
        nofile:
          soft: 1024
          hard: 524288
      cap_add:
        - NET_ADMIN
        - SYS_ADMIN
        - SYS_NICE
        - IPC_LOCK
      security_opt:
        - seccomp:unconfined
        - apparmor:unconfined

# ------------------------------------------------

# WSL: ~
#   Attach WSL libraries
      volumes:
      - /usr/lib/wsl:/usr/lib/wsl:ro


#
